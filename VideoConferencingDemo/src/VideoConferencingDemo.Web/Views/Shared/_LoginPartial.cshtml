@using VideoConferencingDemo.Infrastructure.Entities.Identity;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Dashboard"
           asp-action="Index">@UserManager.GetUserAsync(User).Result.Name</a>
        </li>

        <li>
            <form class="form-inline" asp-area="Admin" asp-controller="Dashboard" asp-action="Index" method="get">
                <button type="submit" class="nav-link btn btn-link text-dark">Dashboard</button>
            </form>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="SignOut"
              asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="SignUp">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="SignIn">Login</a>
        </li>
    }
</ul>
